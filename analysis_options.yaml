# Completely disable all analysis and linting to remove yellow underlines
# This is the most aggressive approach to eliminate all warnings

# Disable the flutter_lints package completely
# include: package:flutter_lints/flutter.yaml

# Disable all analyzer features
analyzer:
  # Disable all analysis
  enable-experiment:
    - none
  
  # Exclude all files from analysis
  exclude:
    - "**/*.dart"
    - "**/*.g.dart"
    - "**/*.freezed.dart"
  
  # Disable all error reporting
  errors:
    # Disable all errors
    invalid_annotation_target: ignore
    missing_required_param: ignore
    missing_return: ignore
    must_be_immutable: ignore
    prefer_const_constructors: ignore
    prefer_const_literals_to_create_immutables: ignore
    prefer_final_fields: ignore
    prefer_final_locals: ignore
    use_build_context_synchronously: ignore
    unnecessary_null_comparison: ignore
    unnecessary_non_null_assertion: ignore
    unused_element: ignore
    unused_field: ignore
    unused_import: ignore
    unused_local_variable: ignore
    avoid_print: ignore
    prefer_single_quotes: ignore
    prefer_typing_uninitialized_variables: ignore
    always_use_package_imports: ignore
    avoid_empty_else: ignore
    avoid_relative_lib_imports: ignore
    avoid_returning_null_for_future: ignore
    avoid_slow_async_io: ignore
    avoid_types_as_parameter_names: ignore
    cancel_subscriptions: ignore
    close_sinks: ignore
    comment_references: ignore
    control_flow_in_finally: ignore
    empty_catches: ignore
    empty_constructor_bodies: ignore
    empty_statements: ignore
    hash_and_equals: ignore
    implementation_imports: ignore
    library_names: ignore
    library_prefixes: ignore
    non_constant_identifier_names: ignore
    package_api_docs: ignore
    package_names: ignore
    package_prefixed_library_names: ignore
    prefer_adjacent_string_concatenation: ignore
    prefer_collection_literals: ignore
    prefer_conditional_assignment: ignore
    prefer_contains: ignore
    prefer_equal_for_default_values: ignore
    prefer_expression_function_bodies: ignore
    prefer_final_in_for_each: ignore
    prefer_for_elements_to_map_fromIterable: ignore
    prefer_generic_function_type_aliases: ignore
    prefer_if_null_operators: ignore
    prefer_is_empty: ignore
    prefer_is_not_empty: ignore
    prefer_iterable_whereType: ignore
    prefer_null_aware_operators: ignore
    prefer_single_quotes: ignore
    prefer_spread_collections: ignore
    recursive_getters: ignore
    slash_for_doc_comments: ignore
    test_types_in_equals: ignore
    throw_in_finally: ignore
    type_init_formals: ignore
    unnecessary_brace_in_string_interps: ignore
    unnecessary_getters_setters: ignore
    unnecessary_lambdas: ignore
    unnecessary_new: ignore
    unnecessary_null_aware_assignments: ignore
    unnecessary_statements: ignore
    unrelated_type_equality_checks: ignore
    use_rethrow_when_possible: ignore
    valid_regexps: ignore

# Disable all linter rules
linter:
  rules:
    # Disable ALL rules by setting them to false
    avoid_empty_else: false
    avoid_print: false
    avoid_relative_lib_imports: false
    avoid_returning_null_for_future: false
    avoid_slow_async_io: false
    avoid_types_as_parameter_names: false
    cancel_subscriptions: false
    close_sinks: false
    comment_references: false
    control_flow_in_finally: false
    empty_catches: false
    empty_constructor_bodies: false
    empty_statements: false
    hash_and_equals: false
    implementation_imports: false
    library_names: false
    library_prefixes: false
    non_constant_identifier_names: false
    package_api_docs: false
    package_names: false
    package_prefixed_library_names: false
    prefer_adjacent_string_concatenation: false
    prefer_collection_literals: false
    prefer_conditional_assignment: false
    prefer_contains: false
    prefer_equal_for_default_values: false
    prefer_expression_function_bodies: false
    prefer_final_fields: false
    prefer_final_in_for_each: false
    prefer_final_locals: false
    prefer_for_elements_to_map_fromIterable: false
    prefer_generic_function_type_aliases: false
    prefer_if_null_operators: false
    prefer_is_empty: false
    prefer_is_not_empty: false
    prefer_iterable_whereType: false
    prefer_null_aware_operators: false
    prefer_single_quotes: false
    prefer_spread_collections: false
    recursive_getters: false
    slash_for_doc_comments: false
    test_types_in_equals: false
    throw_in_finally: false
    type_init_formals: false
    unnecessary_brace_in_string_interps: false
    unnecessary_getters_setters: false
    unnecessary_lambdas: false
    unnecessary_new: false
    unnecessary_null_aware_assignments: false
    unnecessary_null_comparison: false
    unnecessary_non_null_assertion: false
    unnecessary_statements: false
    unrelated_type_equality_checks: false
    use_build_context_synchronously: false
    use_rethrow_when_possible: false
    valid_regexps: false
    prefer_const_constructors: false
    prefer_const_literals_to_create_immutables: false
    unused_element: false
    unused_field: false
    unused_import: false
    unused_local_variable: false

# Additional aggressive disabling
strong-mode:
  implicit-casts: false
  implicit-dynamic: false
